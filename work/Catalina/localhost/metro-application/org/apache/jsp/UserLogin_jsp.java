/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2024-11-29 07:36:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class UserLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/NEW/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1308849601000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("            <html>\r\n");
      out.write("\r\n");
      out.write("            <head>\r\n");
      out.write("                <meta charset=\"UTF-8\">\r\n");
      out.write("                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("                <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\">\r\n");
      out.write("                <title>Government Metro Service Login</title>\r\n");
      out.write("\r\n");
      out.write("                <style>\r\n");
      out.write("                    body {\r\n");
      out.write("                        background-size: cover;\r\n");
      out.write("                        background-repeat: no-repeat;\r\n");
      out.write("                        background-position: center;\r\n");
      out.write("                    }\r\n");
      out.write("                </style>\r\n");
      out.write("            </head>\r\n");
      out.write("\r\n");
      out.write("            <body class=\"bg bg-dark\">\r\n");
      out.write("                <nav class=\"navbar navbar-expand-lg navbar-dark\" style=\"background-color: rgb(127, 134, 138);\">\r\n");
      out.write("                    <div class=\"container-fluid d-flex justify-content-between align-items-center\">\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <a class=\"navbar-brand\" href=\"getIndex\">\r\n");
      out.write("                                <img src=\"https://www.x-workz.in/Logo.png\" alt=\"xworkz logo\" style=\"max-height: 50px;\">\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <span class=\"navbar-text h5 text-dark\">Namma Metro</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("                            data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\"\r\n");
      out.write("                            aria-label=\"Toggle navigation\">\r\n");
      out.write("                            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("                        </button>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("                            <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("                                <li class=\"nav-item\">\r\n");
      out.write("                                    <a class=\"nav-link btn btn-primary btn-outline-dark text-light\"\r\n");
      out.write("                                        href=\"getLoginPage\">Back</a>\r\n");
      out.write("                                </li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </nav>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"container my-5\">\r\n");
      out.write("                    <div class=\"row justify-content-center\">\r\n");
      out.write("                        <div class=\"col-md-5\">\r\n");
      out.write("                            <div class=\"card rounded-0 border-warning box-shadow p-4\" style=\"background-color: rgba(235, 242, 247, 0.6);\">\r\n");
      out.write("                                \r\n");
      out.write("                                <h2 class=\"text-center mb-4 text-dark text-shadow\">User Login</h2>\r\n");
      out.write("                                <form action=\"getUserOtpDetails\" method=\"get\">\r\n");
      out.write("                                    <div class=\"mb-4   \">\r\n");
      out.write("                                        <label for=\"emailId\" class=\"form-label text-light\"> Email id</label>\r\n");
      out.write("                                        <input type=\"email\" id=\"userEmail\" name=\"emailId\"\r\n");
      out.write("                                            placeholder=\"Enter your email id\" class=\"form-control border-dark shadow-sm \"  onblur=\"checkUserEmail()\"\r\n");
      out.write("                                            value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userDto.emailId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("                                        <span id=\"ueId\"></span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"d-grid col-4 mx-auto\">\r\n");
      out.write("                                        <button type=\"submit\" class=\"btn btn-primary rounded-pill\"> ✈️ Get OTP</button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </form>\r\n");
      out.write("\r\n");
      out.write("                                <form action=\"verifyUserOtp\" method=\"post\" class=\"mt-4\">\r\n");
      out.write("                                    <div class=\"mb-3\">\r\n");
      out.write("                                        <input type=\"email\" class=\"form-control\" placeholder=\"Enter your email\"\r\n");
      out.write("                                            name=\"emailId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userDto.emailId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" hidden>\r\n");
      out.write("                                        <label for=\"inputPassword5\" class=\"form-label text-light\">Enter OTP</label>\r\n");
      out.write("                                        <input type=\"password\" class=\"form-control border-dark shadow-sm\" placeholder=\"Enter your otp\"\r\n");
      out.write("                                            name=\"otp\" required>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"text-center\">\r\n");
      out.write("                                        <div class=\"col-12\">\r\n");
      out.write("                                            <button type=\"submit\" class=\"btn btn-success rounded-3\" id=\"verifyOtp\"> Login\r\n");
      out.write("                                                </button>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </form>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <footer class=\"footer fixed-bottom py-3\" style=\"background-color: rgb(87, 93, 95);\">\r\n");
      out.write("                    <div class=\"text-white text-center\">\r\n");
      out.write("                        <nav>\r\n");
      out.write("                            <a href=\"#\" class=\"mx-2 text-white\">Privacy Policy</a>\r\n");
      out.write("                            <a href=\"#\" class=\"mx-2 text-white\">Terms of Service</a>\r\n");
      out.write("                        </nav>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </footer>\r\n");
      out.write("\r\n");
      out.write("                <!-- Bootstrap JS -->\r\n");
      out.write("                <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("                <script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("                <script>\r\n");
      out.write("                    \r\n");
      out.write("                    const checkUserEmail = async () => {\r\n");
      out.write("                        const email = document.getElementById(\"userEmail\").value;\r\n");
      out.write("                        const button = document.getElementById(\"button\");\r\n");
      out.write("                        const ueId = document.getElementById(\"ueId\");\r\n");
      out.write("                        ueId.innerHTML =\"\";\r\n");
      out.write("\r\n");
      out.write("                        if (email.length < 5) {\r\n");
      out.write("                            ueId.innerHTML = \"<span style='color:red;'>Invalid email</span>\";\r\n");
      out.write("                            button.setAttribute(\"disabled\", \"true\");\r\n");
      out.write("                            return;\r\n");
      out.write("                        }\r\n");
      out.write("                        const response = await axios('http://localhost:8083/metro-application/isUserEmailExists?emailId=' + email);\r\n");
      out.write("                        if (response.data === \"Email Exists\") {\r\n");
      out.write("                            ueId.innerHTML = \"\";\r\n");
      out.write("                            button.removeAttribute(\"disabled\");\r\n");
      out.write("                        } else if (response.data === \"Email Does not exists\") {\r\n");
      out.write("                            ueId.innerHTML = \"<span style='color:red;'>Email does not exist</span>\";\r\n");
      out.write("                            button.setAttribute(\"disabled\", \"true\");\r\n");
      out.write("                        }\r\n");
      out.write("\r\n");
      out.write("                        checkUserForm();\r\n");
      out.write("                    };\r\n");
      out.write("                    function checkUserForm() {\r\n");
      out.write("                        var email = document.getElementById(\"userEmail\").value;\r\n");
      out.write("                        \r\n");
      out.write("                        var button = document.getElementById(\"button\");\r\n");
      out.write("                        if (email.length >= 5 ) {\r\n");
      out.write("                            button.removeAttribute(\"disabled\");\r\n");
      out.write("                        } else {\r\n");
      out.write("                            button.setAttribute(\"disabled\", \"true\");\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                </script>\r\n");
      out.write("\r\n");
      out.write("            </body>\r\n");
      out.write("\r\n");
      out.write("            </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
